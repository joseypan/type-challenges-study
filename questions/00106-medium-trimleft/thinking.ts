// 【分析】
// 1、根据测试用例可知，我们需要将传入的字符串类型，把左侧所有的空格以及一些转义字符都清除掉，如何清除呢？
// 2、按照思路应该是遍历这个字符串，然后判断其是否为空格 \n \t 感觉是不是可以引入正则？
// 3、疑问点：如何遍历字符串xxx[number]这样么？
// 4、如何获取到泛型的值？ 通过S extends infer X 通过拿到X就可以提取出来泛型的值
// 5、然后如何遍历当前提取的X的值呢？感觉需要递归，递归结束条件是当前项不等于空格\t \n
// 6、所以ts如何引入正则呢？需要判断是否以空格\n\t开头
// 7、疑问：为什么最终的结果是any类型
// type Empty = '' | '\n' | '\t'
// type AAAD<S extends string> = S extends `${Empty}${infer X}` ? AAAD<X> : S
// type AAADA = AAAD<' aaaa'>
